# SOAP proxy for CNPq WebServices
# nginx configuration

# Add "debug" to the following line if you want to see debug messages in the error log
error_log logs/error.log debug;

worker_processes auto;
events {
	worker_connections 1024;
}

http {
	proxy_cache_path cache keys_zone=cnpqws:12m levels=1:2 inactive=1y max_size=1g;

	server {
		listen 127.0.0.1:7081;

		# This server is needed because proxy_cache_valid does not accept a variable as its
		# time parameter. So, we create a second server which sets the X-Accel-Expires header.
		# Please note that an internal location would not serve our purpose, because
		# ngx_http_proxy_module would treat it differently and disregard this header.

		# Setup below the DNS servers used to lookup the SOAP server name.
		# Please note that nginx is currently unable to get this from /etc/resolv.conf.
		resolver 200.136.207.5 200.133.224.5 valid=1h;

		# SSL client configuration
		lua_ssl_protocols TLSv1.2;
		lua_ssl_trusted_certificate "tls/ICP-V2c.pem";
		lua_ssl_verify_depth 3;

		location / {
			# Proxy from remote server and parse response to establish an expiry time
			content_by_lua_file "scripts/cnpqws_proxy.lua";
		}
	}

	server {
		listen 7080;
		listen [::]:7080;

		listen 7443 ssl;
		listen [::]:7443 ssl;

		# SSL server configuration
		ssl_certificate "tls/private/cnpqwsproxy.crt";
		ssl_certificate_key "tls/private/cnpqwsproxy.key";
		include "tls_server_safe_defaults.conf";

		# Access control by client IP address
		include "cnpqws_allowed_clients.conf";
		deny all;

		location / {
			proxy_cache cnpqws;
			proxy_cache_methods GET HEAD POST;
			proxy_cache_use_stale error invalid_header timeout updating
				http_500 http_502 http_503 http_504 http_403 http_404;
			proxy_pass "http://localhost:7081";

			# Ignore all headers except X-Accel-Expires, which is set by ourselves
			proxy_ignore_headers Expires Cache-Control Set-Cookie Vary;

			client_body_buffer_size 64k;
			client_max_body_size 64k;

			# Parse SOAP XML request body to generate the cache key.
			# Use body as fallback if the parser returns prematurely.
			set $body_cache_key "$request_body";
			access_by_lua_file "scripts/cnpqws_cache_key.lua";
			proxy_cache_key "$request_uri|$body_cache_key";

			# Add a header to ease debugging of the proxy
			add_header X-Cached $upstream_cache_status;
		}

		location = /favicon.ico {
			alias "static/xml.ico";
		}
	}
}
